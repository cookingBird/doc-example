/**
 * Cesium - https://github.com/CesiumGS/cesium
 *
 * Copyright 2011-2020 Cesium Contributors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Columbus View (Pat. Pend.)
 *
 * Portions licensed separately.
 * See https://github.com/CesiumGS/cesium/blob/master/LICENSE.md for full licensing details.
 */
define(["./when-8d13db60","./Check-70bec281","./Math-61ede240","./Cartographic-f2a06374","./Cartesian2-16a61632","./BoundingSphere-d018a565","./Cartesian4-5af5bb24","./RuntimeError-ba10bc3e","./WebGLConstants-4c11ee5f","./ComponentDatatype-5862616f","./GeometryAttribute-773da12d","./PrimitiveType-97893bc7","./FeatureDetection-7bd32c34","./Transforms-f77c92da","./buildModuleUrl-392763e2","./GeometryAttributes-aacecde6","./IndexDatatype-9435b55f","./IntersectionTests-813bb943","./Plane-aa6c3ce5","./arrayFill-9766fb2e","./GeometryOffsetAttribute-999fc023","./VertexFormat-fe4db402","./arrayRemoveDuplicates-2869246d","./EllipsoidTangentPlane-e82c480a","./EllipsoidRhumbLine-87f26cac","./earcut-2.2.1-b404d9e6","./PolygonPipeline-6175e66b","./PolylineVolumeGeometryLibrary-44de161b","./EllipsoidGeodesic-9ef071e0","./PolylinePipeline-f937854b","./CorridorGeometryLibrary-8e7a2b1b"],function(ae,p,ie,oe,h,g,e,t,r,ne,se,C,a,i,o,le,de,n,s,x,N,D,b,l,d,u,M,c,m,f,ue){var me=new oe.Cartesian3,fe=new oe.Cartesian3,ye=new oe.Cartesian3,ce=new oe.Cartesian3,O=new oe.Cartesian3,pe=new oe.Cartesian3,he=new oe.Cartesian3,ge=new oe.Cartesian3;function v(e,t){for(var r=0;r<e.length;r++)e[r]=t.scaleToGeodeticSurface(e[r],e[r]);return e}function Ce(e,t,r,a,i,o){var n=e.normals,s=e.tangents,l=e.bitangents,d=oe.Cartesian3.normalize(oe.Cartesian3.cross(r,t,he),he);o.normal&&ue.CorridorGeometryLibrary.addAttribute(n,t,a,i),o.tangent&&ue.CorridorGeometryLibrary.addAttribute(s,d,a,i),o.bitangent&&ue.CorridorGeometryLibrary.addAttribute(l,r,a,i)}function I(e,t,r){var a,i,o,n=e.positions,s=e.corners,l=e.endPositions,d=e.lefts,u=e.normals,m=new le.GeometryAttributes,f=0,y=0,c=0;for(i=0;i<n.length;i+=2)f+=o=n[i].length-3,c+=2*o,y+=n[i+1].length-3;for(f+=3,y+=3,i=0;i<s.length;i++){a=s[i];var p=s[i].leftPositions;ae.defined(p)?f+=o=p.length:y+=o=s[i].rightPositions.length,c+=o}var h,g=ae.defined(l);g&&(f+=h=l[0].length-3,y+=h,c+=6*(h/=3));var C,b,v,A,_,w,T=f+y,G=new Float64Array(T),E={normals:t.normal?new Float32Array(T):void 0,tangents:t.tangent?new Float32Array(T):void 0,bitangents:t.bitangent?new Float32Array(T):void 0},V=0,F=T-1,L=me,P=fe,x=h/2,N=de.IndexDatatype.createTypedArray(T/3,c),D=0;if(g){w=ye,_=ce;var M=l[0];for(L=oe.Cartesian3.fromArray(u,0,L),P=oe.Cartesian3.fromArray(d,0,P),i=0;i<x;i++)w=oe.Cartesian3.fromArray(M,3*(x-1-i),w),_=oe.Cartesian3.fromArray(M,3*(x+i),_),ue.CorridorGeometryLibrary.addAttribute(G,_,V),ue.CorridorGeometryLibrary.addAttribute(G,w,void 0,F),Ce(E,L,P,V,F,t),A=(b=V/3)+1,v=(C=(F-2)/3)-1,N[D++]=C,N[D++]=b,N[D++]=v,N[D++]=v,N[D++]=b,N[D++]=A,V+=3,F-=3}var O,I,k=0,S=0,R=n[k++],H=n[k++];for(G.set(R,V),G.set(H,F-H.length+1),P=oe.Cartesian3.fromArray(d,S,P),o=H.length-3,i=0;i<o;i+=3)O=r.geodeticSurfaceNormal(oe.Cartesian3.fromArray(R,i,he),he),I=r.geodeticSurfaceNormal(oe.Cartesian3.fromArray(H,o-i,ge),ge),Ce(E,L=oe.Cartesian3.normalize(oe.Cartesian3.add(O,I,L),L),P,V,F,t),A=(b=V/3)+1,v=(C=(F-2)/3)-1,N[D++]=C,N[D++]=b,N[D++]=v,N[D++]=v,N[D++]=b,N[D++]=A,V+=3,F-=3;for(O=r.geodeticSurfaceNormal(oe.Cartesian3.fromArray(R,o,he),he),I=r.geodeticSurfaceNormal(oe.Cartesian3.fromArray(H,o,ge),ge),L=oe.Cartesian3.normalize(oe.Cartesian3.add(O,I,L),L),S+=3,i=0;i<s.length;i++){var z,U,B,Y=(a=s[i]).leftPositions,W=a.rightPositions,q=pe,J=ye,j=ce;if(L=oe.Cartesian3.fromArray(u,S,L),ae.defined(Y)){for(Ce(E,L,P,void 0,F,t),F-=3,U=A,B=v,z=0;z<Y.length/3;z++)q=oe.Cartesian3.fromArray(Y,3*z,q),N[D++]=U,N[D++]=B-z-1,N[D++]=B-z,ue.CorridorGeometryLibrary.addAttribute(G,q,void 0,F),J=oe.Cartesian3.fromArray(G,3*(B-z-1),J),j=oe.Cartesian3.fromArray(G,3*U,j),Ce(E,L,P=oe.Cartesian3.normalize(oe.Cartesian3.subtract(J,j,P),P),void 0,F,t),F-=3;q=oe.Cartesian3.fromArray(G,3*U,q),J=oe.Cartesian3.subtract(oe.Cartesian3.fromArray(G,3*B,J),q,J),j=oe.Cartesian3.subtract(oe.Cartesian3.fromArray(G,3*(B-z),j),q,j),Ce(E,L,P=oe.Cartesian3.normalize(oe.Cartesian3.add(J,j,P),P),V,void 0,t),V+=3}else{for(Ce(E,L,P,V,void 0,t),V+=3,U=v,B=A,z=0;z<W.length/3;z++)q=oe.Cartesian3.fromArray(W,3*z,q),N[D++]=U,N[D++]=B+z,N[D++]=B+z+1,ue.CorridorGeometryLibrary.addAttribute(G,q,V),J=oe.Cartesian3.fromArray(G,3*U,J),j=oe.Cartesian3.fromArray(G,3*(B+z),j),Ce(E,L,P=oe.Cartesian3.normalize(oe.Cartesian3.subtract(J,j,P),P),V,void 0,t),V+=3;q=oe.Cartesian3.fromArray(G,3*U,q),J=oe.Cartesian3.subtract(oe.Cartesian3.fromArray(G,3*(B+z),J),q,J),j=oe.Cartesian3.subtract(oe.Cartesian3.fromArray(G,3*B,j),q,j),Ce(E,L,P=oe.Cartesian3.normalize(oe.Cartesian3.negate(oe.Cartesian3.add(j,J,P),P),P),void 0,F,t),F-=3}for(R=n[k++],H=n[k++],R.splice(0,3),H.splice(H.length-3,3),G.set(R,V),G.set(H,F-H.length+1),o=H.length-3,S+=3,P=oe.Cartesian3.fromArray(d,S,P),z=0;z<H.length;z+=3)O=r.geodeticSurfaceNormal(oe.Cartesian3.fromArray(R,z,he),he),I=r.geodeticSurfaceNormal(oe.Cartesian3.fromArray(H,o-z,ge),ge),Ce(E,L=oe.Cartesian3.normalize(oe.Cartesian3.add(O,I,L),L),P,V,F,t),b=(A=V/3)-1,C=(v=(F-2)/3)+1,N[D++]=C,N[D++]=b,N[D++]=v,N[D++]=v,N[D++]=b,N[D++]=A,V+=3,F-=3;V-=3,F+=3}if(Ce(E,L=oe.Cartesian3.fromArray(u,u.length-3,L),P,V,F,t),g){V+=3,F-=3,w=ye,_=ce;var K=l[1];for(i=0;i<x;i++)w=oe.Cartesian3.fromArray(K,3*(h-i-1),w),_=oe.Cartesian3.fromArray(K,3*i,_),ue.CorridorGeometryLibrary.addAttribute(G,w,void 0,F),ue.CorridorGeometryLibrary.addAttribute(G,_,V),Ce(E,L,P,V,F,t),b=(A=V/3)-1,C=(v=(F-2)/3)+1,N[D++]=C,N[D++]=b,N[D++]=v,N[D++]=v,N[D++]=b,N[D++]=A,V+=3,F-=3}if(m.position=new se.GeometryAttribute({componentDatatype:ne.ComponentDatatype.DOUBLE,componentsPerAttribute:3,values:G}),t.st){var Q,X,Z=new Float32Array(T/3*2),$=0;if(g){f/=3,y/=3;var ee,te=Math.PI/(h+1);X=1/(f-h+1),Q=1/(y-h+1);var re=h/2;for(i=re+1;i<h+1;i++)ee=ie.CesiumMath.PI_OVER_TWO+te*i,Z[$++]=Q*(1+Math.cos(ee)),Z[$++]=.5*(1+Math.sin(ee));for(i=1;i<y-h+1;i++)Z[$++]=i*Q,Z[$++]=0;for(i=h;re<i;i--)ee=ie.CesiumMath.PI_OVER_TWO-i*te,Z[$++]=1-Q*(1+Math.cos(ee)),Z[$++]=.5*(1+Math.sin(ee));for(i=re;0<i;i--)ee=ie.CesiumMath.PI_OVER_TWO-te*i,Z[$++]=1-X*(1+Math.cos(ee)),Z[$++]=.5*(1+Math.sin(ee));for(i=f-h;0<i;i--)Z[$++]=i*X,Z[$++]=1;for(i=1;i<re+1;i++)ee=ie.CesiumMath.PI_OVER_TWO+te*i,Z[$++]=X*(1+Math.cos(ee)),Z[$++]=.5*(1+Math.sin(ee))}else{for(X=1/((f/=3)-1),Q=1/((y/=3)-1),i=0;i<y;i++)Z[$++]=i*Q,Z[$++]=0;for(i=f;0<i;i--)Z[$++]=(i-1)*X,Z[$++]=1}m.st=new se.GeometryAttribute({componentDatatype:ne.ComponentDatatype.FLOAT,componentsPerAttribute:2,values:Z})}return t.normal&&(m.normal=new se.GeometryAttribute({componentDatatype:ne.ComponentDatatype.FLOAT,componentsPerAttribute:3,values:E.normals})),t.tangent&&(m.tangent=new se.GeometryAttribute({componentDatatype:ne.ComponentDatatype.FLOAT,componentsPerAttribute:3,values:E.tangents})),t.bitangent&&(m.bitangent=new se.GeometryAttribute({componentDatatype:ne.ComponentDatatype.FLOAT,componentsPerAttribute:3,values:E.bitangents})),{attributes:m,indices:N}}function k(e,t,r){r[t++]=e[0],r[t++]=e[1],r[t++]=e[2];for(var a=3;a<e.length;a+=3){var i=e[a],o=e[a+1],n=e[a+2];r[t++]=i,r[t++]=o,r[t++]=n,r[t++]=i,r[t++]=o,r[t++]=n}return r[t++]=e[0],r[t++]=e[1],r[t++]=e[2],r}function A(e,t){var r=new D.VertexFormat({position:t.position,normal:t.normal||t.bitangent||e.shadowVolume,tangent:t.tangent,bitangent:t.normal||t.bitangent,st:t.st}),a=e.ellipsoid,i=I(ue.CorridorGeometryLibrary.computePositions(e),r,a),o=e.height,n=e.extrudedHeight,s=i.attributes,l=i.indices,d=s.position.values,u=d.length,m=new Float64Array(6*u),f=new Float64Array(u);f.set(d);var y,c=new Float64Array(4*u);c=k(d=M.PolygonPipeline.scaleToGeodeticHeight(d,o,a),0,c),c=k(f=M.PolygonPipeline.scaleToGeodeticHeight(f,n,a),2*u,c),m.set(d),m.set(f,u),m.set(c,2*u),s.position.values=m,s=function(e,t){if(!(t.normal||t.tangent||t.bitangent||t.st))return e;var r,a,i=e.position.values;(t.normal||t.bitangent)&&(r=e.normal.values,a=e.bitangent.values);var o,n=e.position.values.length/18,s=3*n,l=2*n,d=2*s;if(t.normal||t.bitangent||t.tangent){var u=t.normal?new Float32Array(6*s):void 0,m=t.tangent?new Float32Array(6*s):void 0,f=t.bitangent?new Float32Array(6*s):void 0,y=me,c=fe,p=ye,h=ce,g=O,C=pe,b=d;for(o=0;o<s;o+=3){var v=b+d;y=oe.Cartesian3.fromArray(i,o,y),c=oe.Cartesian3.fromArray(i,o+s,c),p=oe.Cartesian3.fromArray(i,(o+3)%s,p),c=oe.Cartesian3.subtract(c,y,c),p=oe.Cartesian3.subtract(p,y,p),h=oe.Cartesian3.normalize(oe.Cartesian3.cross(c,p,h),h),t.normal&&(ue.CorridorGeometryLibrary.addAttribute(u,h,v),ue.CorridorGeometryLibrary.addAttribute(u,h,v+3),ue.CorridorGeometryLibrary.addAttribute(u,h,b),ue.CorridorGeometryLibrary.addAttribute(u,h,b+3)),(t.tangent||t.bitangent)&&(C=oe.Cartesian3.fromArray(r,o,C),t.bitangent&&(ue.CorridorGeometryLibrary.addAttribute(f,C,v),ue.CorridorGeometryLibrary.addAttribute(f,C,v+3),ue.CorridorGeometryLibrary.addAttribute(f,C,b),ue.CorridorGeometryLibrary.addAttribute(f,C,b+3)),t.tangent&&(g=oe.Cartesian3.normalize(oe.Cartesian3.cross(C,h,g),g),ue.CorridorGeometryLibrary.addAttribute(m,g,v),ue.CorridorGeometryLibrary.addAttribute(m,g,v+3),ue.CorridorGeometryLibrary.addAttribute(m,g,b),ue.CorridorGeometryLibrary.addAttribute(m,g,b+3))),b+=6}if(t.normal){for(u.set(r),o=0;o<s;o+=3)u[o+s]=-r[o],u[o+s+1]=-r[o+1],u[o+s+2]=-r[o+2];e.normal.values=u}else e.normal=void 0;if(t.bitangent?(f.set(a),f.set(a,s),e.bitangent.values=f):e.bitangent=void 0,t.tangent){var A=e.tangent.values;m.set(A),m.set(A,s),e.tangent.values=m}}if(t.st){var _=e.st.values,w=new Float32Array(6*l);w.set(_),w.set(_,l);for(var T=2*l,G=0;G<2;G++){for(w[T++]=_[0],w[T++]=_[1],o=2;o<l;o+=2){var E=_[o],V=_[o+1];w[T++]=E,w[T++]=V,w[T++]=E,w[T++]=V}w[T++]=_[0],w[T++]=_[1]}e.st.values=w}return e}(s,t);var p=u/3;if(e.shadowVolume){var h=s.normal.values;u=h.length;var g=new Float32Array(6*u);for(y=0;y<u;y++)h[y]=-h[y];g.set(h,u),g=k(h,4*u,g),s.extrudeDirection=new se.GeometryAttribute({componentDatatype:ne.ComponentDatatype.FLOAT,componentsPerAttribute:3,values:g}),t.normal||(s.normal=void 0)}if(ae.defined(e.offsetAttribute)){var C=new Uint8Array(6*p);if(e.offsetAttribute===N.GeometryOffsetAttribute.TOP)C=x.arrayFill(C,1,0,p),C=x.arrayFill(C,1,2*p,4*p);else{var b=e.offsetAttribute===N.GeometryOffsetAttribute.NONE?0:1;C=x.arrayFill(C,b)}s.applyOffset=new se.GeometryAttribute({componentDatatype:ne.ComponentDatatype.UNSIGNED_BYTE,componentsPerAttribute:1,values:C})}var v=l.length,A=p+p,_=de.IndexDatatype.createTypedArray(m.length/3,2*v+3*A);_.set(l);var w,T,G,E,V=v;for(y=0;y<v;y+=3){var F=l[y],L=l[y+1],P=l[y+2];_[V++]=P+p,_[V++]=L+p,_[V++]=F+p}for(y=0;y<A;y+=2)G=(w=y+A)+1,E=(T=w+A)+1,_[V++]=w,_[V++]=T,_[V++]=G,_[V++]=G,_[V++]=T,_[V++]=E;return{attributes:s,indices:_}}var _=new oe.Cartesian3,w=new oe.Cartesian3,T=new oe.Cartographic;function G(e,t,r,a,i,o){var n=oe.Cartesian3.subtract(t,e,_);oe.Cartesian3.normalize(n,n);var s=r.geodeticSurfaceNormal(e,w),l=oe.Cartesian3.cross(n,s,_);oe.Cartesian3.multiplyByScalar(l,a,l);var d=i.latitude,u=i.longitude,m=o.latitude,f=o.longitude;oe.Cartesian3.add(e,l,w),r.cartesianToCartographic(w,T);var y=T.latitude,c=T.longitude;d=Math.min(d,y),u=Math.min(u,c),m=Math.max(m,y),f=Math.max(f,c),oe.Cartesian3.subtract(e,l,w),r.cartesianToCartographic(w,T),y=T.latitude,c=T.longitude,d=Math.min(d,y),u=Math.min(u,c),m=Math.max(m,y),f=Math.max(f,c),i.latitude=d,i.longitude=u,o.latitude=m,o.longitude=f}var E=new oe.Cartesian3,V=new oe.Cartesian3,F=new oe.Cartographic,L=new oe.Cartographic;function y(e,t,r,a,i){e=v(e,t);var o=b.arrayRemoveDuplicates(e,oe.Cartesian3.equalsEpsilon),n=o.length;if(n<2||r<=0)return new h.Rectangle;var s,l,d=.5*r;if(F.latitude=Number.POSITIVE_INFINITY,F.longitude=Number.POSITIVE_INFINITY,L.latitude=Number.NEGATIVE_INFINITY,L.longitude=Number.NEGATIVE_INFINITY,a===c.CornerType.ROUNDED){var u=o[0];oe.Cartesian3.subtract(u,o[1],E),oe.Cartesian3.normalize(E,E),oe.Cartesian3.multiplyByScalar(E,d,E),oe.Cartesian3.add(u,E,V),t.cartesianToCartographic(V,T),s=T.latitude,l=T.longitude,F.latitude=Math.min(F.latitude,s),F.longitude=Math.min(F.longitude,l),L.latitude=Math.max(L.latitude,s),L.longitude=Math.max(L.longitude,l)}for(var m=0;m<n-1;++m)G(o[m],o[m+1],t,d,F,L);var f=o[n-1];oe.Cartesian3.subtract(f,o[n-2],E),oe.Cartesian3.normalize(E,E),oe.Cartesian3.multiplyByScalar(E,d,E),oe.Cartesian3.add(f,E,V),G(f,V,t,d,F,L),a===c.CornerType.ROUNDED&&(t.cartesianToCartographic(V,T),s=T.latitude,l=T.longitude,F.latitude=Math.min(F.latitude,s),F.longitude=Math.min(F.longitude,l),L.latitude=Math.max(L.latitude,s),L.longitude=Math.max(L.longitude,l));var y=ae.defined(i)?i:new h.Rectangle;return y.north=L.latitude,y.south=F.latitude,y.east=L.longitude,y.west=F.longitude,y}function P(e){var t=(e=ae.defaultValue(e,ae.defaultValue.EMPTY_OBJECT)).positions,r=e.width;p.Check.defined("options.positions",t),p.Check.defined("options.width",r);var a=ae.defaultValue(e.height,0),i=ae.defaultValue(e.extrudedHeight,a);this._positions=t,this._ellipsoid=h.Ellipsoid.clone(ae.defaultValue(e.ellipsoid,h.Ellipsoid.WGS84)),this._vertexFormat=D.VertexFormat.clone(ae.defaultValue(e.vertexFormat,D.VertexFormat.DEFAULT)),this._width=r,this._height=Math.max(a,i),this._extrudedHeight=Math.min(a,i),this._cornerType=ae.defaultValue(e.cornerType,c.CornerType.ROUNDED),this._granularity=ae.defaultValue(e.granularity,ie.CesiumMath.RADIANS_PER_DEGREE),this._shadowVolume=ae.defaultValue(e.shadowVolume,!1),this._workerName="createCorridorGeometry",this._offsetAttribute=e.offsetAttribute,this._rectangle=void 0,this.packedLength=1+t.length*oe.Cartesian3.packedLength+h.Ellipsoid.packedLength+D.VertexFormat.packedLength+7}P.pack=function(e,t,r){p.Check.defined("value",e),p.Check.defined("array",t),r=ae.defaultValue(r,0);var a=e._positions,i=a.length;t[r++]=i;for(var o=0;o<i;++o,r+=oe.Cartesian3.packedLength)oe.Cartesian3.pack(a[o],t,r);return h.Ellipsoid.pack(e._ellipsoid,t,r),r+=h.Ellipsoid.packedLength,D.VertexFormat.pack(e._vertexFormat,t,r),r+=D.VertexFormat.packedLength,t[r++]=e._width,t[r++]=e._height,t[r++]=e._extrudedHeight,t[r++]=e._cornerType,t[r++]=e._granularity,t[r++]=e._shadowVolume?1:0,t[r]=ae.defaultValue(e._offsetAttribute,-1),t};var S=h.Ellipsoid.clone(h.Ellipsoid.UNIT_SPHERE),R=new D.VertexFormat,H={positions:void 0,ellipsoid:S,vertexFormat:R,width:void 0,height:void 0,extrudedHeight:void 0,cornerType:void 0,granularity:void 0,shadowVolume:void 0,offsetAttribute:void 0};return P.unpack=function(e,t,r){p.Check.defined("array",e),t=ae.defaultValue(t,0);for(var a=e[t++],i=new Array(a),o=0;o<a;++o,t+=oe.Cartesian3.packedLength)i[o]=oe.Cartesian3.unpack(e,t);var n=h.Ellipsoid.unpack(e,t,S);t+=h.Ellipsoid.packedLength;var s=D.VertexFormat.unpack(e,t,R);t+=D.VertexFormat.packedLength;var l=e[t++],d=e[t++],u=e[t++],m=e[t++],f=e[t++],y=1===e[t++],c=e[t];return ae.defined(r)?(r._positions=i,r._ellipsoid=h.Ellipsoid.clone(n,r._ellipsoid),r._vertexFormat=D.VertexFormat.clone(s,r._vertexFormat),r._width=l,r._height=d,r._extrudedHeight=u,r._cornerType=m,r._granularity=f,r._shadowVolume=y,r._offsetAttribute=-1===c?void 0:c,r):(H.positions=i,H.width=l,H.height=d,H.extrudedHeight=u,H.cornerType=m,H.granularity=f,H.shadowVolume=y,H.offsetAttribute=-1===c?void 0:c,new P(H))},P.computeRectangle=function(e,t){var r=(e=ae.defaultValue(e,ae.defaultValue.EMPTY_OBJECT)).positions,a=e.width;return p.Check.defined("options.positions",r),p.Check.defined("options.width",a),y(r,ae.defaultValue(e.ellipsoid,h.Ellipsoid.WGS84),a,ae.defaultValue(e.cornerType,c.CornerType.ROUNDED),t)},P.createGeometry=function(e){var t=e._positions,r=e._width,a=e._ellipsoid;t=v(t,a);var i=b.arrayRemoveDuplicates(t,oe.Cartesian3.equalsEpsilon);if(!(i.length<2||r<=0)){var o,n=e._height,s=e._extrudedHeight,l=!ie.CesiumMath.equalsEpsilon(n,s,0,ie.CesiumMath.EPSILON2),d=e._vertexFormat,u={ellipsoid:a,positions:i,width:r,cornerType:e._cornerType,granularity:e._granularity,saveAttributes:!0};if(l)u.height=n,u.extrudedHeight=s,u.shadowVolume=e._shadowVolume,u.offsetAttribute=e._offsetAttribute,o=A(u,d);else if((o=I(ue.CorridorGeometryLibrary.computePositions(u),d,a)).attributes.position.values=M.PolygonPipeline.scaleToGeodeticHeight(o.attributes.position.values,n,a),ae.defined(e._offsetAttribute)){var m=e._offsetAttribute===N.GeometryOffsetAttribute.NONE?0:1,f=o.attributes.position.values.length,y=new Uint8Array(f/3);x.arrayFill(y,m),o.attributes.applyOffset=new se.GeometryAttribute({componentDatatype:ne.ComponentDatatype.UNSIGNED_BYTE,componentsPerAttribute:1,values:y})}var c=o.attributes,p=g.BoundingSphere.fromVertices(c.position.values,void 0,3);return d.position||(o.attributes.position.values=void 0),new se.Geometry({attributes:c,indices:o.indices,primitiveType:C.PrimitiveType.TRIANGLES,boundingSphere:p,offsetAttribute:e._offsetAttribute})}},P.createShadowVolume=function(e,t,r){var a=e._granularity,i=e._ellipsoid,o=t(a,i),n=r(a,i);return new P({positions:e._positions,width:e._width,cornerType:e._cornerType,ellipsoid:i,granularity:a,extrudedHeight:o,height:n,vertexFormat:D.VertexFormat.POSITION_ONLY,shadowVolume:!0})},Object.defineProperties(P.prototype,{rectangle:{get:function(){return ae.defined(this._rectangle)||(this._rectangle=y(this._positions,this._ellipsoid,this._width,this._cornerType)),this._rectangle}},textureCoordinateRotationPoints:{get:function(){return[0,0,0,1,1,0]}}}),function(e,t){return ae.defined(t)&&(e=P.unpack(e,t)),e._ellipsoid=h.Ellipsoid.clone(e._ellipsoid),P.createGeometry(e)}});